----------------------------------
TileMap to GameWorld Rules
----------------------------------
- Non-objects will stay in the TileMap and be rendered independently from entities
	- However, [Shape]MapObjects with the type "body" will be added to the physics world, 
	  detached from everything.
- All entities SHOULD be derived from TextureMapObjects (until further notice)
	- These will be EXTRACTED from the TileMap, processed, and inserted into the GameWorld
	- The physics body size will be determined from the object size UNLESS:
		- The object has a property "body_skeleton_ref", whose value is the name of shape MapObject with type "body_skeleton"
	- Animated entities will just override get_sprite
		- The texture region from the TileMap is just used for visualization in Tiled
		- It will be ignored when the entity is created 
	- Each entity will have a static function: buildFromMapObject(TextureMapObject mapObject)
		- From this, we can get the id, position, texture region, and custom properties
		- The custom properties will be validated against EntityPropertyValidator
	- An entity's id will be derived from a MapObject's name (not id)
		- The name is not part of the MapObject's properties
	- An entity's type will be derived from a MapObject's type property
	
----------------------------------
Design Route
----------------------------------
1. Figure out how the world's should progress
	- Gets more and more colorful
	- The environments become more detailed
2. Create the rooms/puzzles with increasing difficulty
	- After finishing a world, write the narration.
3. Worry about the background / particle effects / extra details later
	
---------------------------------------------------------------------------------------------------------------

Room 2:
- ChainEntity
- 

---------------------------------------------------------------------------------------------------------------

- How to do smooth scrolling with non-unit movement path pieces?
	- Break non-unit pieces into multiple unit movements?
- How to check for collisions with terrain?
- Think about cleaning up Utils/Globals
	- Move some Globals stuff to Utils maybe?
	- Add more methods like getEntityById()
- Text/narration display system
- Add 'accepted values' check in EntityPropertyValidator
- Add rotation functionality to particle effects
- Fix texture-flipping issue
- Save "ground-level" y position, for where to put clouds
- Validating particle effect properties
- Loading rooms on the fly
- More interesting animation when obtaining a collectable
- Make Globals.NUM_TILE_MAP_COLS and Globals.NUM_TILE_MAP_ROWS determined at run-time, instead of hardcoded
- Support for sensor locations