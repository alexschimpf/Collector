----------------------------------
TileMap to GameWorld Rules
----------------------------------
- Non-objects will stay in the TileMap and be rendered independently from entities
	- However, [Shape]MapObjects with the type "body" will be added to the physics world, 
	  detached from everything.
- All entities SHOULD be derived from TextureMapObjects (until further notice)
	- These will be EXTRACTED from the TileMap, processed, and inserted into the GameWorld
	- The physics body size will be determined from the object size UNLESS:
		- The object has a property "body_skeleton_ref", whose value is the name of shape MapObject with type "body_skeleton"
	- Animated entities will just override get_sprite
		- The texture region from the TileMap is just used for visualization in Tiled
		- It will be ignored when the entity is created 
	- Each entity will have a static function: buildFromMapObject(TextureMapObject mapObject)
		- From this, we can get the id, position, texture region, and custom properties
		- The custom properties will be validated against EntityPropertyValidator
	- An entity's id will be derived from a MapObject's name (not id)
		- The name is not part of the MapObject's properties
	- An entity's type will be derived from a MapObject's type property
	
----------------------------------
Design Route
----------------------------------
1. Figure out how the world's should progress
	- Gets more and more colorful
	- The environments become more detailed
2. Create the rooms/puzzles with increasing difficulty
	- After finishing a world, write the narration.
3. Worry about the background / particle effects / extra details later

---------------------------------------------------------------------------------------------------------------

[Teleportation / Portals]
- Portals that change where they transport you
- Portals that move
- Things that you have to avoid that respawn you






---------------------------------------------------------------------

- Fixed-movement entities, that can reverse when blocked
- Switches that can change a moving entity's path
- Blocking a moving entity to force it to stick there, then using it as a stepping stone
- Moving blocks that can fit through a space, but you have to get off and get back on when it next isn't blocked off
- Moving blocks that rotate as they move, discretely or continuously

---------------------

---------------------------------------------------------------------------------------------------------------

[High-Priority]
- Add rounded corners to player
1. How to check for collisions with terrain?
2. Fix room loading bug
	- Handle this more safely
3. Need a system for saving the state of each room
	- After collecting a collectable, needs to be removed forever from that room
4. Animation when entering door

[Low-Priority]
- Preserve player face direction when going between rooms
- Remove debug button input handling
- Add corner-fillers
- Minimize number of physics bodies
- Make different shaped clouds
- When loading a room, let the user see item loaded piece by piece to make it more interesting
- Fix texture-flipping issue
- Add 'accepted values' check in EntityPropertyValidator
- Validating particle effect properties
- More interesting animation when obtaining a collectable
- Think about cleaning up Utils/Globals
	- Move some Globals stuff to Utils maybe?
	- Add more methods like getEntityById()
- Fix minor spacing issue (at least for moving entities)
- Hierarchy in entity properties



