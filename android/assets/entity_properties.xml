<properties>
    <global_properties>
        <required>
            <property name="type" note="the entity type" />
            <property name="id" />
            <property name="gid" />
            <property name="width" />
            <property name="height" />
            <property name="x" />
            <property name="y" />
        </required>
        <optional>
            <property name="body_type" default="static" />
            <property name="body_width" default="" />
            <property name="body_height" default="" />
        </optional>
    </global_properties>
    <entity_properties>
        
        <!-- Player -->
        <entity type="player" class="entity.Player">
            <override>
                <property name="body_type" value="dynamic" />
            </override>           
        </entity>
        
        <!-- Collectable -->
        <entity type="collectable" class="entity.CollectableEntity">
            <required>
            	<property name="narration_text" />
            </required>
        </entity>
        
        <!-- Breakable -->
        <entity type="breakable" class="BreakableEntity">
            <optional>
                <property name="health" default="1" note="1 shot collision = 1 health point" />
            </optional>
        </entity>
        
        <!-- Programmable -->
        <entity type="programmable" class="entity.ProgrammableEntity">
            <required>
                <property name="max_left" />
                <property name="max_right" />
                <property name="max_up" />
                <property name="max_down" />
            </required>
            <optional>
                <property name="other_ids" default="" />
            </optional>
            <override>
                <property name="image_key" value="programmable_1" />
                <property name="body_type" value="kinematic" />
            </override>
        </entity>
        
        <!-- Programmable Trigger -->
        <entity type="programmable_trigger" class="entity.ProgrammableTriggerEntity">
            <required>
                <property name="target_ids" />
                <property name="trigger_type" note="allowed: 'reset' or 'move'" />
            </required>
        </entity>
        
        <!-- Bump Enable -->
        <entity type="bump_enable" class="entity.BumpEnableEntity">
            <optional>
                <property name="enabled" default="false" />
            </optional>
        </entity>
        
        <!-- Chain -->
        <entity type="chain" class="entity.ChainEntity">
            <required>
                <property name="chain_start_id" />
                <property name="state_machine" />
                <property name="activated_duration" />
                <property name="chain_ids" />
            </required>
        </entity>
        
        <!-- Disappearing -->
        <entity type="disappearing" class="entity.DisappearingEntity" >
            <required>
                <property name="disappear_duration" />
            </required>
            <optional>
                <property name="recreate_delay" default="1000" />
                <property name="recreate" default="true" />
                <property name="disappear_on_touch" default="true" />
            </optional>
        </entity>
        
        <!-- Smooth Moving -->
        <entity type="smooth_moving" class="entity.SmoothMovingEntity" >
            <required>
                <property name="path" note="format: (dx,dy) (dx,dy) ..." />
                <property name="intervals" note="should be one LESS than # of path elements" />
            </required>
            <optional>
				<property name="loop" default="true" />
				<property name="start_on_create" default="false" />
				<property name="is_fatal" default="false" />
				<property name="respawn_pos" default="" note="dx,dy from starting position"/>
            </optional>
            <override>
                <property name="body_type" value="kinematic" />
            </override>
        </entity>
        
        <!-- Discrete Moving -->
        <entity type="discrete_moving" class="entity.DiscreteMovingEntity" >
            <required>
                <property name="path" note="format: (dx,dy) (dx,dy) ..." />
                <property name="intervals" note="should be one MORE than # of path elements" />
            </required>
            <optional>
				<property name="start_on_create" default="false" />
				<property name="restart_on_blocked" default="false" />
				<property name="rotations" default=""  note="list of #s from (0,1,2,3), where x means x * 90 degrees CC"/>
            </optional>
            <override>
                <property name="body_type" value="kinematic" />
            </override>
        </entity>
        
    </entities>
</properties>